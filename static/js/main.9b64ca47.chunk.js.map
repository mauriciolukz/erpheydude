{"version":3,"sources":["modules/components/login/Login.js","helpers/history.js","router/routes.js","redux/_constants/alert.constants.js","redux/_reducers/index.js","redux/_reducers/alert.reducer.js","redux/_store/store.js","reportWebVitals.js","index.js"],"names":["Login","props","useSelector","state","console","log","type","class","history","createBrowserHistory","Routes","path","component","from","to","alertConstants","rootReducer","combineReducers","alert","action","message","loggerMiddleware","createLogger","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAGe,SAASA,EAAMC,GAEbC,aAAY,SAAAC,GACrBC,QAAQC,IAAIF,MAGhB,OACI,uCAEI,wBAAQG,KAAK,SAASC,MAAM,kBAA5B,wB,WCVCC,EAAUC,cCaRC,MAXf,WACI,OACI,cAAC,IAAD,CAAQF,QAASA,EAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWZ,IAC3B,cAAC,IAAD,CAAUa,KAAK,IAAIC,GAAG,Y,qCCTzBC,EACA,gBADAA,EAEF,cAFEA,EAGF,cCAX,IAIeC,EAJKC,0BAAgB,CAChCC,MCFG,WAAoC,IAArBf,EAAoB,uDAAZ,GAAIgB,EAAQ,uCACxC,OAAQA,EAAOb,MACb,KAAKS,EACH,MAAO,CACLT,KAAM,gBACNc,QAASD,EAAOC,SAEpB,KAAKL,EACH,MAAO,CACLT,KAAM,eACNc,QAASD,EAAOC,SAEpB,KAAKL,EACH,MAAO,GACT,QACE,OAAOZ,M,QCXPkB,EAAmBC,yBAEZC,EAAQC,sBACjBR,EAEAS,8BAAoBC,0BAAgBC,IAAgBN,KCCzCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SAAwB,cAAC,EAAD,QAE1BiB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b64ca47.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux';\n\nexport default function Login(props) {\n\n    const data = useSelector(state => {\n        console.log(state);\n    });\n\n    return (\n        <div>\n            hola\n            <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n        </div>\n    )\n}\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../modules/components/login/Login';\nimport { history } from '../helpers';\n\nfunction Routes() {\n    return (\n        <Router history={history}>\n            <Switch>\n                <Route path=\"/\" component={Login} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default Routes;","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};","import { combineReducers } from 'redux';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n    alert\n});\n\nexport default rootReducer;","import { alertConstants } from '../_constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer, \n    //applyMiddleware(thunkMiddleware,loggerMiddleware)\n    composeWithDevTools(applyMiddleware(thunkMiddleware,loggerMiddleware))\n);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './router/routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport { store } from './redux/_store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}